{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    "accountGroupToken": {
      "type": "string", 
      "metadata": {
        "description": "The token for the ThousandEyes account group that the Enterprise Agent will belong to. You can find your ThousandEyes account group token under ThousandEyes Agent Settings."
      }
    },
    "enableBrowserTests": {
      "defaultValue": true,
      "type": "bool",
      "metadata": {
        "description": "Allow enabling ThousandEyes Browser test capabilities (Page Load and Transaction)."
      }
    },
    "hostname": {
      "type": "string",
      "metadata": {
        "description": "Specify the VM hostname, this will also be the Agent name."
      }
    },
    "VMSize": {
      "defaultValue": "Standard_B1s",
      "type": "string",
      "metadata": {
        "description": "Select the size of the Agent VM. Standard_B1s - 1 vCPU, 1 GB Mem; Standard_B2s - 2 vCPU, 4 GB Mem; Standard_D2_v2 - 2 vCPU, 7 GB Mem"
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "18.04-LTS",
      "allowedValues": [
        "18.04-LTS",
        "20.04-LTS"
      ],
      "metadata": {
        "description": "Please select which version of Ubuntu you would like your agent to be deployed on. This will use a fully patched image of your selected Ubuntu version. For Ubuntu versions 20.04 or higher, the \"Ubuntu Pro for Azure\" option is required."
      }
    },
    "enableAutoPatch": {
      "type": "string",
      "defaultValue": "Yes",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Auto Patch is a feature that safely and automatically patches your virtual machine OS to maintain security compliance."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "thousandeyes",
      "metadata": {
        "description": "Specify the admin user name for the VM."
      }
    },
    "SSHPublicKey": {
      "type": "securestring",
      "metadata": {
        "description": "Public key used to SSH to the Agent."
      }
        },
        "proxyType": {
            "defaultValue": "None",
            "allowedValues": [
                "None",
                "STATIC"
            ],
            "type": "String",
            "metadata": {
                "description": "If using a proxy, specify the proxy type. Default is none."
            }
        },
        "proxyHost": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "If using a proxy, specify the proxy host and port (host:port)"
            }
        },
        "proxyUser": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "If using a proxy, specify the proxy user (if required)."
            }
        },
        "proxyPass": {
            "defaultValue": "",
            "type": "SecureString",
            "metadata": {
                "description": "If using a proxy, specify the proxy password (if required)."
            }
        }
    },
    "variables": {
        "imagePublisher": "[if(equals(parameters('ubuntuOSVersion'),'20.04-LTS'),'canonical','Canonical')]",
        "imageOffer": "[if(equals(parameters('ubuntuOSVersion'),'20.04-LTS'),'0001-com-ubuntu-server-focal','UbuntuServer')]",
        "imageSku": "[if(equals(parameters('ubuntuOSVersion'),'20.04-LTS'),'20_04-lts',parameters('ubuntuOSVersion'))]",
        "imageVersion": "latest",
        "nicName": "networkInterface1",
        "vmName": "[parameters('hostname')]",
        "virtualNetworkName": "virtualNetwork1",
        "publicIPAddressName": "publicIp1",
        "addressPrefix": "10.0.0.0/16",
        "subnet1Name": "Subnet-1",
        "subnet1Prefix": "10.0.0.0/24",
        "publicIPAddressType": "Dynamic",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                        "keyData": "[parameters('SSHPublicKey')]"
                    }
                ]
            },
            "provisionVMAgent": true,
            "patchSettings": {
                "patchMode": "[if(equals(parameters('enableAutoPatch'),'Yes'), 'AutomaticByPlatform', 'ImageDefault')]"
            }
        },
    "bbotArg": "[if(parameters('enableBrowserTests'), ' -b ', '')]",
        "proxyTypeArg": "[if(equals(parameters('proxyType'), 'None'), '', concat(' -t ', parameters('proxyType'), ' '))]",
        "proxyHostArg": "[if(empty(parameters('proxyHost')), '', concat(' -P ', parameters('proxyHost'), ' '))]",
        "proxyUserArg": "[if(empty(parameters('proxyUser')), '', concat(' -U ', parameters('proxyUser'), ' '))]",
        "proxyPassArg": "[if(empty(parameters('proxyPass')), '', concat(' -u ', parameters('proxyPass'), ' '))]",
        "proxyHttp": "[if(empty(parameters('proxyUser')), concat(parameters('proxyHost')), concat(parameters('proxyUser'), ':', parameters('proxyPass'),'@', parameters('proxyHost')))]",
        "proxyEnv": "[if(empty(parameters('proxyHost')), '', variables('proxyHttp'))]",
        "networkSecurityGroupName": "default-NSG",
        "customDataProxy": "[concat('#cloud-config\n\nwrite_files:\n- path: /etc/environment\n  append: true\n  content: |\n    http_proxy=',variables('proxyEnv'),'\n    https_proxy=',variables('proxyEnv'),'\n\nruncmd:\n- export http_proxy=',variables('proxyEnv'),'\n- export https_proxy=',variables('proxyEnv'),'\n- curl -Os https://downloads.thousandeyes.com/agent/install_thousandeyes.sh\n- chmod +x install_thousandeyes.sh\n- sudo ./install_thousandeyes.sh ', variables('bbotArg'), variables('proxyTypeArg'), variables('proxyHostArg'), variables('proxyUserArg'), variables('proxyPassArg'), parameters('accountGroupToken'))]",
        "customData": "[concat('#cloud-config\n\nruncmd:\n- curl -Os https://downloads.thousandeyes.com/agent/install_thousandeyes.sh\n- chmod +x install_thousandeyes.sh\n- sudo ./install_thousandeyes.sh ', variables('bbotArg'), parameters('accountGroupToken'))]",
        "location": "[resourceGroup().location]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-06-01",
            "name": "[variables('publicIPAddressName')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-08-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowSshInBound",
                        "properties": {
                            "priority": 1000,
                            "access": "Allow",
                            "direction": "Inbound",
                            "destinationPortRange": "22",
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "AllowTtlExceededResponse",
                        "properties": {
                            "priority": 1010,
                            "access": "Allow",
                            "direction": "Inbound",
                            "destinationPortRange": "11",
                            "protocol": "ICMP",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-06-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet1Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-06-01",
            "name": "[variables('nicName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[variables('publicIPAddressName')]",
                "[variables('virtualNetworkName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('virtualNetworkName'), variables('subnet1Name'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "name": "[variables('vmName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[variables('nicName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('VMSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": "[variables('linuxConfiguration')]",
                    "customData": "[if(empty(parameters('proxyHost')), base64(variables('customData')), base64(variables('customDataProxy')))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSku')]",
                        "version": "[variables('imageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            }
        }
    ]
}
